name: Frontend CI with Backend (Docker)

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout frontend repo
        uses: actions/checkout@v3

      - name: Checkout backend repo
        uses: actions/checkout@v3
        with:
          repository: LannyRivero/RenewSim-backend
          path: backend

      # Copiamos el docker-compose.yml del backend
      - name: Copy docker-compose file
        run: cp backend/docker-compose.yml .

      # Copiamos el init.sql del backend
      - name: Copy init.sql for CI
        run: cp backend/init.sql .

      # Arrancamos MySQL y backend con Docker Compose
      - name: Start backend and MySQL with Docker Compose
        run: docker compose up -d

      # Esperamos un poco para que se inicien los contenedores
      - name: Initial wait for backend to start
        run: sleep 30

      # Verificamos que el backend responde en /api/v1/auth/login
      - name: Check backend is reachable from runner
        run: |
          echo "Checking if backend is up..."
          for i in {1..10}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://renewsim-backend:8080)
            if [ "$status" -eq 401 ] || [ "$status" -eq 200 ]; then
              echo "Backend is up and reachable (status: $status)"
              exit 0
            fi
            echo "Backend not ready yet (status: $status). Retrying in 5 seconds..."
            sleep 5
          done
          echo "Backend did not become ready in time." && exit 1

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Crear archivo .env para el frontend
      - name: Create .env file for frontend
        run: |
          echo "VITE_API_BASE_URL=http://renewsim-backend:8080/api" >> .env
          echo "VITE_AUTH_TOKEN_SECRET=your_secret_key" >> .env
          echo "VITE_OPENWEATHER_API_KEY=75a86c6a8e0e72b3b99cfbc6fb9bf349" >> .env

      # Instalar dependencias del frontend
      - name: Install frontend dependencies
        run: npm ci

      # Arrancar frontend dev server para Cypress
      - name: Start frontend dev server
        run: |
          nohup npm run dev > /dev/null 2>&1 &
          sleep 10

      # E2E tests con Cypress
      - name: Cypress e2e tests
        run: npx cypress run

      # Build final del frontend
      - name: Build project
        run: npm run build






